{"version":3,"sources":["components/modalError/ModalError.js","components/pokemonCard/PokemonCard.js","components/pokemones/Pokemones.js","components/pokemon/Pokemon.js","components/pokemonEdit/PokemonEdit.js","components/navbar/Navbar.js","components/createPokemon/CreatePokemon.js","components/createAtaque/CreateAtaque.js","App.js","serviceWorker.js","index.js"],"names":["ModalError","status","message","handleOpen","className","onClick","e","stopPropagation","PokemonCard","nombre","_id","tipo","level","imgURI","history","attacks","key","push","alt","src","map","attack","Pokemones","useState","pokemones","setPokemones","error","setError","useEffect","Axios","get","then","res","data","pokemons","catch","err","length","to","pokemon","response","Pokemon","id","location","setPokemon","ataques","pathname","delete","handleDelete","PokemonEdit","body","setBody","allAttacks","setAllAttacks","handleChange","target","name","value","isSelected","i","type","placeholder","onChange","newAttacks","verifyExist","filter","handleSelect","put","pokemonUpdated","Navbar","CreatePokemon","console","log","post","CreateAtaque","daÃ±o","ataque","App","exact","path","render","match","params","Boolean","window","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"6cAEaA,G,MAAa,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,OAAQC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,WAC5C,OACE,yBAAKC,UAAU,oBAAoBC,QAASF,GAC1C,yBAAKC,UAAU,UAAUC,QAAS,SAAAC,GAAC,OAAIA,EAAEC,oBACvC,yBAAKH,UAAU,cAAf,kBACA,yBAAKA,UAAU,eAAf,2BAEE,yBAAKA,UAAU,gBAAgBH,IAEjC,yBAAKG,UAAU,eAAf,4BAEE,yBAAKA,UAAU,gBAAf,KAAiCF,EAAjC,WCeKM,G,MA1BK,SAAC,GAQd,IAPLC,EAOI,EAPJA,OACAC,EAMI,EANJA,IACAC,EAKI,EALJA,KACAC,EAII,EAJJA,MACAC,EAGI,EAHJA,OACAC,EAEI,EAFJA,QACAC,EACI,EADJA,QAMA,OACE,yBAAKX,UAAU,gBAAgBY,IAAKN,EAAKL,QAL3B,WACdS,EAAQG,KAAR,mBAAyBP,MAKvB,yBAAKQ,IAAKR,EAAKS,IAAKN,EAAQT,UAAU,YACtC,yBAAKA,UAAU,aAAf,WAAoCK,GACpC,yBAAKL,UAAU,aAAf,UAAmCQ,GACnC,yBAAKR,UAAU,YAAf,SAAiCO,GACjC,yBAAKP,UAAU,eACb,4BAAKW,GAAWA,EAAQK,KAAI,SAAAC,GAAM,OAAI,4BAAKA,EAAOZ,gBC6B3Ca,EA7CG,SAAC,GAAwB,EAAtBb,OAAuB,IAAfK,EAAc,EAAdA,QAAc,EACPS,mBAAS,IADF,mBAClCC,EADkC,KACvBC,EADuB,OAEfF,mBAAS,IAFM,mBAElCG,EAFkC,KAE3BC,EAF2B,KAIzCC,qBAAU,WACRC,IAAMC,IAAI,sCACPC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,QAChBF,MAAK,SAAAG,GACJT,EAAaS,MAEdC,OAAM,SAAAC,GAAG,OAAIT,EAASS,QACxB,CAACZ,EAAUa,SAKd,OACE,6BACE,yBAAKjC,UAAU,iBAAf,QACA,yBAAKA,UAAU,oBAAf,2BACA,kBAAC,IAAD,CAAMkC,GAAG,mBACP,4BAAQlC,UAAU,WAAlB,oBAEF,yBAAKA,UAAU,qBACZoB,EAAUa,OACTb,EAAUJ,KAAI,SAAAmB,GACZ,OACE,kBAAC,EAAD,iBAAiBA,EAAjB,CAA0BzB,QAASA,EAASE,IAAKuB,EAAQ7B,UAI7D,wBAAIN,UAAU,cAAd,4BAGHsB,EAAMc,SACL,kBAAC,EAAD,CACEvC,OAAQyB,EAAMc,SAASvC,OACvBC,QAASwB,EAAMc,SAASP,KACxB9B,WAzBW,WACjBwB,EAAS,OA0BH,OCoBKc,G,MA7DC,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,GAAIC,EAAwB,EAAxBA,SAAU7B,EAAc,EAAdA,QAAc,EACfS,mBAAS,IADM,mBACtCgB,EADsC,KAC7BK,EAD6B,OAEnBrB,mBAAS,IAFU,mBAEtCG,EAFsC,KAE/BC,EAF+B,KAQ7CC,qBAAU,WACRC,IAAMC,IAAN,6CAAgDY,IAC7CX,MAAK,SAAAC,GACJ,OAAOA,EAAIC,QAEZF,KAAKa,GACLT,MAAMR,KACR,CAACe,IAUJ,OACE,yBAAKtC,UAAU,oBACb,yBAAKc,IAAKqB,EAAQ7B,IAAKS,IAAKoB,EAAQ1B,OAAQT,UAAU,eACtD,yBAAKA,UAAU,eAAf,YAAuCmC,EAAQ9B,QAC/C,yBAAKL,UAAU,gBAAf,WAAuCmC,EAAQ3B,OAC/C,yBAAKR,UAAU,eAAf,UAAqCmC,EAAQ5B,MAC7C,yBAAKP,UAAU,eAAf,UAEE,4BACGmC,EAAQM,SACPN,EAAQM,QAAQzB,KAAI,SAAAC,GAAM,OACxB,wBAAIL,IAAKK,EAAOX,IAAKN,UAAU,kBAC5BiB,EAAOZ,aAKjBiB,EAAMc,SACL,kBAAC,EAAD,CACEvC,OAAQyB,EAAMc,SAASvC,OACvBC,QAASwB,EAAMc,SAASP,KACxB9B,WA1CW,WACjBwB,EAAS,OA2CH,KACJ,yBAAKvB,UAAU,mBACb,kBAAC,IAAD,CAAMkC,GAAE,UAAKK,GAAYA,EAASG,SAA1B,UACN,4BAAQ1C,UAAU,WAAlB,WAEF,4BAAQA,UAAU,UAAUC,QAAS,kBApCtB,SAAAqC,GACnBb,IAAMkB,OAAN,6CAAmDL,IAChDX,MAAK,kBAAM,WACVjB,EAAQG,KAAK,SAEdkB,MAAMR,GA+BsCqB,CAAaN,KAAxD,c,uBC8EOO,G,MAnIK,SAAC,GAA+B,IAA7BP,EAA4B,EAA5BA,GAAI5B,EAAwB,EAAxBA,QAAwB,KAAf6B,SACVpB,mBAAS,CAC/Bd,OAAQ,GACRG,MAAO,EACPD,KAAM,GACNkC,QAAS,GACThC,OAAQ,MANuC,mBAC1CqC,EAD0C,KACpCC,EADoC,OAQvB5B,mBAAS,IARc,mBAQ1CG,EAR0C,KAQnCC,EARmC,OASbJ,mBAAS,IATI,mBAS1C6B,EAT0C,KAS9BC,EAT8B,KAW3CC,EAAe,SAAAhD,GACnB6C,EAAQ,eAAKD,EAAN,eAAa5C,EAAEiD,OAAOC,KAAOlD,EAAEiD,OAAOE,UAmBzCC,EAAa,SAAAhB,GACjB,GAAIG,EAAQR,OACV,IAAK,IAAIsB,EAAI,EAAGA,EAAId,EAAQR,OAAQsB,IAClC,GAAId,EAAQc,GAAGjD,MAAQgC,EAAI,MAAO,qBAGtC,MAAO,IAOTd,qBAAU,WACRC,IAAMC,IAAN,6CAAgDY,IAC7CX,MAAK,SAAAC,GAAG,OAAIA,EAAIC,QAChBF,KAAKoB,GACLhB,MAAMR,KACR,CAACe,IAEJd,qBAAU,WACRC,IAAMC,IAAI,qCACPC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,QAChBF,KAAKsB,GACLlB,MAAMR,KACR,IAEH,IAQQd,EAAyCqC,EAAzCrC,OAAQD,EAAiCsC,EAAjCtC,MAAOD,EAA0BuC,EAA1BvC,KAAMF,EAAoByC,EAApBzC,OAAQoC,EAAYK,EAAZL,QACrC,OACE,yBAAKzC,UAAU,iBACb,yBAAKc,IAAI,GAAGC,IAAKN,EAAQT,UAAU,eACnC,yBAAKA,UAAU,mBACb,2BACEoD,KAAK,SACLC,MAAO5C,EACP+C,KAAK,OACLC,YAAY,mBACZzD,UAAU,gBACV0D,SAAUR,IAEZ,2BACEE,KAAK,SACLC,MAAOhD,EACPmD,KAAK,OACLC,YAAY,SACZzD,UAAU,gBACV0D,SAAUR,IAEZ,2BACEE,KAAK,OACLC,MAAO9C,EACPiD,KAAK,OACLC,YAAY,OACZzD,UAAU,gBACV0D,SAAUR,IAEZ,2BACEE,KAAK,QACLC,MAAO7C,EACPgD,KAAK,SACLC,YAAY,QACZzD,UAAU,gBACV0D,SAAUR,KAGbF,EAAWf,OACV,yBAAKjC,UAAU,oBACZgD,EAAWhC,KAAI,SAAAC,GAAM,OACpB,yBACEjB,UAAS,qBAAgBsD,EAAWrC,EAAOX,MAC3CM,IAAKK,EAAOX,IACZL,QAAS,kBA/FA,SAAAgB,GACnB,IAAI0C,EAAa,GAUfA,EATkB,SAAArB,GAClB,IAAK,IAAIiB,EAAI,EAAGA,EAAId,EAAQR,OAAQsB,IAClC,GAAId,EAAQc,GAAGjD,MAAQgC,EAAI,OAAO,EAEpC,OAAO,EAELsB,CAAY3C,EAAOX,KACRmC,EAAQoB,QAAO,SAAA3D,GAAC,OAAIA,EAAEI,MAAQW,EAAOX,OAExC,sBAAOmC,GAAP,CAAgBxB,IAE5B8B,EAAQ,eAAKD,EAAN,CAAYL,QAASkB,KAkFHG,CAAa7C,KAE3BA,EAAOZ,YAIZ,KACJ,4BAAQL,UAAU,UAAUC,QA3DX,WACnBwB,IAAMsC,IAAN,6CAAgDzB,GAAMQ,GACnDnB,MAAK,SAAAC,GAAG,OAAIA,EAAIC,QAChBF,MAAK,SAAAqC,GACJtD,EAAQG,KAAR,mBAAyBmD,EAAe1D,SAEzCyB,MAAMR,KAqDP,cAGCD,EAAMc,SACL,kBAAC,EAAD,CACEvC,OAAQyB,EAAMc,SAASvC,OACvBC,QAASwB,EAAMc,SAASP,KACxB9B,WApFW,WACjBwB,EAAS,OAqFH,QCnHK0C,G,MAbA,WACb,OACE,yBAAKjE,UAAU,mBACb,kBAAC,IAAD,CAAMkC,GAAG,KACP,yBAAKlC,UAAU,QAAf,cAEF,kBAAC,IAAD,CAAMkC,GAAG,kBACP,yBAAKlC,UAAU,QAAf,oBC+HOkE,G,MAlIO,SAAC,GAAiB,IAAfxD,EAAc,EAAdA,QAAc,EACbS,mBAAS,CAC/Bd,OAAQ,GACRG,MAAO,EACPD,KAAM,GACNkC,QAAS,GACThC,OAAQ,KAN2B,mBAC9BqC,EAD8B,KACxBC,EADwB,OAQD5B,mBAAS,IARR,mBAQ9B6B,EAR8B,KAQlBC,EARkB,OASX9B,mBAAS,IATE,mBAS9BG,EAT8B,KASvBC,EATuB,KAW/B2B,EAAe,SAAAhD,GACnB6C,EAAQ,eAAKD,EAAN,eAAa5C,EAAEiD,OAAOC,KAAOlD,EAAEiD,OAAOE,UAgBzCC,EAAa,SAAAhB,GACjB,GAAIG,EAAQR,OACV,IAAK,IAAIsB,EAAI,EAAGA,EAAId,EAAQR,OAAQsB,IAClC,GAAId,EAAQc,KAAOjB,EAAI,MAAO,qBAGlC,MAAO,IAoBDjC,EAAyCyC,EAAzCzC,OAAQG,EAAiCsC,EAAjCtC,MAAOD,EAA0BuC,EAA1BvC,KAAMkC,EAAoBK,EAApBL,QAAShC,EAAWqC,EAAXrC,OAStC,OAPAe,qBAAU,WACRC,IAAMC,IAAI,qCACPC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,QAChBF,KAAKsB,GACLlB,MAAMR,KACR,IAGD,oCACE,wBAAIvB,UAAU,SAAd,iBACA,yBAAKc,IAAI,GAAGC,IAAKN,EAAQT,UAAU,gBACnC,yBAAKA,UAAU,mBACb,2BACEoD,KAAK,SACLK,YAAY,mBACZC,SAAUR,EACVlD,UAAU,gBACVqD,MAAO5C,EACP+C,KAAK,SAEP,2BACEJ,KAAK,SACLK,YAAY,SACZC,SAAUR,EACVlD,UAAU,gBACVqD,MAAOhD,EACPmD,KAAK,SAEP,2BACEJ,KAAK,QACLK,YAAY,QACZC,SAAUR,EACVlD,UAAU,gBACVqD,MAAO7C,EACPgD,KAAK,WAEP,2BACEJ,KAAK,OACLK,YAAY,OACZC,SAAUR,EACVlD,UAAU,gBACVqD,MAAO9C,EACPiD,KAAK,UAGRR,EAAWf,OACV,yBAAKjC,UAAU,oBACZgD,EAAWhC,KAAI,SAAAC,GAAM,OACpB,yBACEjB,UAAS,qBAAgBsD,EAAWrC,IACpCL,IAAKK,EAAOX,IACZL,QAAS,kBAtEA,SAAAgB,GACnB,IAAI0C,EAAa,GAUfA,EATkB,SAAArB,GAClB,IAAK,IAAIiB,EAAI,EAAGA,EAAId,EAAQR,OAAQsB,IAClC,GAAId,EAAQc,GAAGjD,MAAQgC,EAAI,OAAO,EAEpC,OAAO,EAELsB,CAAY3C,EAAOX,KACRmC,EAAQoB,QAAO,SAAA3D,GAAC,OAAIA,EAAEI,MAAQW,EAAOX,OAExC,sBAAOmC,GAAP,CAAgBxB,IAE5BkD,QAAQC,IAAIT,GACZZ,EAAQ,eAAKD,EAAN,CAAYL,QAASkB,KAwDHG,CAAa7C,KAE3BA,EAAOZ,YAIZ,KACJ,yBAAKL,UAAU,mBACb,4BAAQA,UAAU,UAAUC,QAhGb,WACnBwB,IAAM4C,KAAK,qCAAsCvB,GAC9CnB,MAAK,SAAAC,GAAG,OAAIA,EAAIC,QAChBF,MAAK,SAAAQ,GACJzB,EAAQG,KAAR,mBAAyBsB,EAAQ7B,SAElCyB,MAAMR,KA0FL,UAIDD,EAAMc,SACL,kBAAC,EAAD,CACEvC,OAAQyB,EAAMc,SAASvC,OACvBC,QAASwB,EAAMc,SAASP,KAAK/B,SAAWwB,EAAMc,SAASP,KACvD9B,WA5GW,WACjBwB,EAAS,OA6GH,QC5DK+C,G,MAjEM,SAAC,GAAiB,IAAf5D,EAAc,EAAdA,QAAc,EACZS,mBAAS,CAAEd,OAAQ,GAAIkE,UAAM,EAAGhE,KAAM,KAD1B,mBAC7BuC,EAD6B,KACvBC,EADuB,OAEV5B,mBAAS,IAFC,mBAE7BG,EAF6B,KAEtBC,EAFsB,KAI9B2B,EAAe,SAAAhD,GACnB6C,EAAQ,eAAKD,EAAN,eAAa5C,EAAEiD,OAAOC,KAAOlD,EAAEiD,OAAOE,UAgBvChD,EAAuByC,EAAvBzC,OAAQkE,EAAezB,EAAfyB,UAAMhE,EAASuC,EAATvC,KACtB,OACE,oCACE,wBAAIP,UAAU,gBAAd,gBACA,yBAAKA,UAAU,mBACb,2BACEoD,KAAK,SACLpD,UAAU,gBACVyD,YAAY,SACZC,SAAUR,EACVG,MAAOhD,EACPmD,KAAK,SAEP,2BACEJ,KAAK,UACLpD,UAAU,gBACVyD,YAAY,UACZC,SAAUR,EACVG,MAAOkB,EACPf,KAAK,WAEP,2BACEJ,KAAK,OACLpD,UAAU,gBACVyD,YAAY,OACZC,SAAUR,EACVG,MAAO9C,EACPiD,KAAK,UAGT,4BAAQvD,QAvCS,WACnBwB,IAAM4C,KAAK,oCAAqCvB,GAC7CnB,MAAK,SAAAC,GAAG,OAAIA,EAAIC,QAChBF,MAAK,SAAA6C,GACJ9D,EAAQG,KAAR,QAEDkB,MAAMR,IAiCwBvB,UAAU,WAAzC,SAGCsB,EAAMc,SACL,kBAAC,EAAD,CACEvC,OAAQyB,EAAMc,SAASvC,OACvBC,QAASwB,EAAMc,SAASP,KAAK/B,SAAWwB,EAAMc,SAASP,KACvD9B,WAlDW,WACjBwB,EAAS,OAmDH,QCXKkD,MA7Cf,WACE,OACE,yBAAKzE,UAAU,kBACb,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CACE0E,OAAK,EACLC,KAAK,oBACLC,OAAQ,gBAAGC,EAAH,EAAGA,MAAOnE,EAAV,EAAUA,QAAS6B,EAAnB,EAAmBA,SAAnB,OACN,kBAAC,EAAD,CACED,GAAIuC,EAAMC,OAAOxC,GACjB5B,QAASA,EACT6B,SAAUA,OAIhB,kBAAC,IAAD,CACEmC,OAAK,EACLC,KAAK,kBACLC,OAAQ,gBAAGlE,EAAH,EAAGA,QAAH,OAAiB,kBAAC,EAAD,CAAeA,QAASA,OAEnD,kBAAC,IAAD,CACEgE,OAAK,EACLC,KAAK,eACLC,OAAQ,gBAAGC,EAAH,EAAGA,MAAOtC,EAAV,EAAUA,SAAV,OACN,kBAAC,EAAD,CAASD,GAAIuC,EAAMC,OAAOxC,GAAIC,SAAUA,OAG5C,kBAAC,IAAD,CACEoC,KAAK,iBACLC,OAAQ,gBAAGlE,EAAH,EAAGA,QAAH,OAAiB,kBAAC,EAAD,CAAcA,QAASA,OAElD,kBAAC,IAAD,CACEiE,KAAK,aACLC,OAAQ,gBAAGlE,EAAH,EAAGA,QAAH,OAAiB,kBAAC,EAAD,CAAWA,QAASA,OAE/C,kBAAC,IAAD,CACEiE,KAAK,IACLC,OAAQ,gBAAGlE,EAAH,EAAGA,QAAH,OAAiB,kBAAC,EAAD,CAAWA,QAASA,UCrCnCqE,QACW,cAA7BC,OAAOzC,SAAS0C,UAEe,UAA7BD,OAAOzC,SAAS0C,UAEhBD,OAAOzC,SAAS0C,SAASJ,MACvB,2DCZNK,IAASN,OACP,kBAAC,IAAD,KACE,kBAAC,EAAD,OAEFO,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM5D,MAAK,SAAA6D,GACjCA,EAAaC,kB","file":"static/js/main.bb24e095.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./modalError.css\";\nexport const ModalError = ({ status, message, handleOpen }) => {\n  return (\n    <div className=\"containerAbsolute\" onClick={handleOpen}>\n      <div className=\"content\" onClick={e => e.stopPropagation()}>\n        <div className=\"errorTitle\">Hubo un ERROR!</div>\n        <div className=\"errorStatus\">\n          El codigo del error fue:\n          <div className=\"errorMessage\">{status}</div>\n        </div>\n        <div className=\"errorStatus\">\n          El mensaje del error fue:\n          <div className=\"errorMessage\">\" {message} \"</div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport \"./pokemonCard.css\";\nconst PokemonCard = ({\n  nombre,\n  _id,\n  tipo,\n  level,\n  imgURI,\n  history,\n  attacks\n}) => {\n  const onClick = () => {\n    history.push(`/pokemon/${_id}`);\n  };\n\n  return (\n    <div className=\"cardContainer\" key={_id} onClick={onClick}>\n      <img alt={_id} src={imgURI} className=\"cardImg\" />\n      <div className=\"cardTitle\">Nombre: {nombre}</div>\n      <div className=\"cardLevel\">Nivel: {level}</div>\n      <div className=\"cardType\">Tipo: {tipo}</div>\n      <div className=\"cardAttacks\">\n        <ul>{attacks && attacks.map(attack => <li>{attack.nombre}</li>)}</ul>\n      </div>\n    </div>\n  );\n};\n\nexport default PokemonCard;\n","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./pokemones.css\";\nimport Axios from \"axios\";\nimport { ModalError } from \"../modalError/ModalError\";\nimport PokemonCard from \"../pokemonCard/PokemonCard\";\nconst Pokemones = ({ nombre, history }) => {\n  const [pokemones, setPokemones] = useState([]);\n  const [error, setError] = useState({});\n\n  useEffect(() => {\n    Axios.get(\"http://localhost:5000/api/pokemons\")\n      .then(res => res.data)\n      .then(pokemons => {\n        setPokemones(pokemons);\n      })\n      .catch(err => setError(err));\n  }, [pokemones.length]);\n\n  const handleOpen = () => {\n    setError({});\n  };\n  return (\n    <div>\n      <div className=\"pokemonsTitle\">hola</div>\n      <div className=\"pokemonsSubtitle\">Estos son los pokemones</div>\n      <Link to=\"/pokemon/create\">\n        <button className=\"buttons\">Agregar Pokemon</button>\n      </Link>\n      <div className=\"pokemonsContainer\">\n        {pokemones.length ? (\n          pokemones.map(pokemon => {\n            return (\n              <PokemonCard {...pokemon} history={history} key={pokemon._id} />\n            );\n          })\n        ) : (\n          <h3 className=\"noPokemons\">No hay Pokemones aÃºn</h3>\n        )}\n      </div>\n      {error.response ? (\n        <ModalError\n          status={error.response.status}\n          message={error.response.data}\n          handleOpen={handleOpen}\n        />\n      ) : null}\n    </div>\n  );\n};\n\nexport default Pokemones;\n","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Axios from \"axios\";\nimport { ModalError } from \"../modalError/ModalError\";\nimport \"./pokemon.css\";\nconst Pokemon = ({ id, location, history }) => {\n  const [pokemon, setPokemon] = useState({});\n  const [error, setError] = useState({});\n\n  const handleOpen = () => {\n    setError({});\n  };\n\n  useEffect(() => {\n    Axios.get(`http://localhost:5000/api/pokemons/${id}`)\n      .then(res => {\n        return res.data;\n      })\n      .then(setPokemon)\n      .catch(setError);\n  }, [id]);\n\n  const handleDelete = id => {\n    Axios.delete(`http://localhost:5000/api/pokemons/${id}`)\n      .then(() => () => {\n        history.push(\"/\");\n      })\n      .catch(setError);\n  };\n\n  return (\n    <div className=\"pokemonContainer\">\n      <img alt={pokemon._id} src={pokemon.imgURI} className=\"pokemonImg\" />\n      <div className=\"pokomenName\">Nombre : {pokemon.nombre}</div>\n      <div className=\"pokomenLevel\">Nivel : {pokemon.level}</div>\n      <div className=\"pokomenType\">Tipo : {pokemon.tipo}</div>\n      <div className=\"cardAttacks\">\n        Ataques\n        <ul>\n          {pokemon.ataques &&\n            pokemon.ataques.map(attack => (\n              <li key={attack._id} className=\"pokemonAttacks\">\n                {attack.nombre}\n              </li>\n            ))}\n        </ul>\n      </div>\n      {error.response ? (\n        <ModalError\n          status={error.response.status}\n          message={error.response.data}\n          handleOpen={handleOpen}\n        />\n      ) : null}\n      <div className=\"buttonContainer\">\n        <Link to={`${location && location.pathname}/edit`}>\n          <button className=\"buttons\">Editar</button>\n        </Link>\n        <button className=\"buttons\" onClick={() => handleDelete(id)}>\n          Borrar\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Pokemon;\n","import React, { useState, useEffect } from \"react\";\nimport { ModalError } from \"../modalError/ModalError\";\nimport Axios from \"axios\";\nimport \"./pokemonEdit.css\";\n\nconst PokemonEdit = ({ id, history, location }) => {\n  const [body, setBody] = useState({\n    nombre: \"\",\n    level: 0,\n    tipo: \"\",\n    ataques: [],\n    imgURI: \"\"\n  });\n  const [error, setError] = useState({});\n  const [allAttacks, setAllAttacks] = useState({});\n\n  const handleChange = e => {\n    setBody({ ...body, [e.target.name]: e.target.value });\n  };\n\n  const handleSelect = attack => {\n    let newAttacks = [];\n    const verifyExist = id => {\n      for (let i = 0; i < ataques.length; i++) {\n        if (ataques[i]._id === id) return true;\n      }\n      return false;\n    };\n    if (verifyExist(attack._id)) {\n      newAttacks = ataques.filter(e => e._id !== attack._id);\n    } else {\n      newAttacks = [...ataques, attack];\n    }\n    setBody({ ...body, ataques: newAttacks });\n  };\n\n  const isSelected = id => {\n    if (ataques.length) {\n      for (let i = 0; i < ataques.length; i++) {\n        if (ataques[i]._id === id) return \"cardAttackActivate\";\n      }\n    }\n    return \"\";\n  };\n\n  const handleOpen = () => {\n    setError({});\n  };\n\n  useEffect(() => {\n    Axios.get(`http://localhost:5000/api/pokemons/${id}`)\n      .then(res => res.data)\n      .then(setBody)\n      .catch(setError);\n  }, [id]);\n\n  useEffect(() => {\n    Axios.get(\"http://localhost:5000/api/ataques\")\n      .then(res => res.data)\n      .then(setAllAttacks)\n      .catch(setError);\n  }, []);\n\n  const handleSubmit = () => {\n    Axios.put(`http://localhost:5000/api/pokemons/${id}`, body)\n      .then(res => res.data)\n      .then(pokemonUpdated => {\n        history.push(`/pokemon/${pokemonUpdated._id}`);\n      })\n      .catch(setError);\n  };\n  const { imgURI, level, tipo, nombre, ataques } = body;\n  return (\n    <div className=\"editContainer\">\n      <img alt=\"\" src={imgURI} className=\"pokemonImg\" />\n      <div className=\"inputsContainer\">\n        <input\n          name=\"imgURI\"\n          value={imgURI}\n          type=\"text\"\n          placeholder=\"Url de la imagen\"\n          className=\"inputsPokemon\"\n          onChange={handleChange}\n        />\n        <input\n          name=\"nombre\"\n          value={nombre}\n          type=\"text\"\n          placeholder=\"Nombre\"\n          className=\"inputsPokemon\"\n          onChange={handleChange}\n        />\n        <input\n          name=\"tipo\"\n          value={tipo}\n          type=\"text\"\n          placeholder=\"Tipo\"\n          className=\"inputsPokemon\"\n          onChange={handleChange}\n        />\n        <input\n          name=\"level\"\n          value={level}\n          type=\"number\"\n          placeholder=\"Nivel\"\n          className=\"inputsPokemon\"\n          onChange={handleChange}\n        />\n      </div>\n      {allAttacks.length ? (\n        <div className=\"ataquesContainer\">\n          {allAttacks.map(attack => (\n            <div\n              className={`cardAttack ${isSelected(attack._id)}`}\n              key={attack._id}\n              onClick={() => handleSelect(attack)}\n            >\n              {attack.nombre}\n            </div>\n          ))}\n        </div>\n      ) : null}\n      <button className=\"buttons\" onClick={handleSubmit}>\n        Actualizar\n      </button>\n      {error.response ? (\n        <ModalError\n          status={error.response.status}\n          message={error.response.data}\n          handleOpen={handleOpen}\n        />\n      ) : null}\n    </div>\n  );\n};\n\nexport default PokemonEdit;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./navbar.css\";\nconst Navbar = () => {\n  return (\n    <div className=\"navbarContainer\">\n      <Link to=\"/\">\n        <div className=\"link\">Pokemones</div>\n      </Link>\n      <Link to=\"/ataques/crear\">\n        <div className=\"link\">Crear Ataque</div>\n      </Link>\n    </div>\n  );\n};\n\nexport default Navbar;\n","import React, { useState, useEffect } from \"react\";\nimport Axios from \"axios\";\n\nimport { ModalError } from \"../modalError/ModalError\";\n\nimport \"./createPokemon.css\";\n\nconst CreatePokemon = ({ history }) => {\n  const [body, setBody] = useState({\n    nombre: \"\",\n    level: 0,\n    tipo: \"\",\n    ataques: [],\n    imgURI: \"\"\n  });\n  const [allAttacks, setAllAttacks] = useState({});\n  const [error, setError] = useState({});\n\n  const handleChange = e => {\n    setBody({ ...body, [e.target.name]: e.target.value });\n  };\n\n  const handleOpen = () => {\n    setError({});\n  };\n\n  const handleSubmit = () => {\n    Axios.post(\"http://localhost:5000/api/pokemons\", body)\n      .then(res => res.data)\n      .then(pokemon => {\n        history.push(`/pokemon/${pokemon._id}`);\n      })\n      .catch(setError);\n  };\n\n  const isSelected = id => {\n    if (ataques.length) {\n      for (let i = 0; i < ataques.length; i++) {\n        if (ataques[i] === id) return \"cardAttackActivate\";\n      }\n    }\n    return \"\";\n  };\n\n  const handleSelect = attack => {\n    let newAttacks = [];\n    const verifyExist = id => {\n      for (let i = 0; i < ataques.length; i++) {\n        if (ataques[i]._id === id) return true;\n      }\n      return false;\n    };\n    if (verifyExist(attack._id)) {\n      newAttacks = ataques.filter(e => e._id !== attack._id);\n    } else {\n      newAttacks = [...ataques, attack];\n    }\n    console.log(newAttacks);\n    setBody({ ...body, ataques: newAttacks });\n  };\n\n  const { nombre, level, tipo, ataques, imgURI } = body;\n\n  useEffect(() => {\n    Axios.get(\"http://localhost:5000/api/ataques\")\n      .then(res => res.data)\n      .then(setAllAttacks)\n      .catch(setError);\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">Crear Pokemon</h1>\n      <img alt=\"\" src={imgURI} className=\"createImage\" />\n      <div className=\"inputsContainer\">\n        <input\n          name=\"imgURI\"\n          placeholder=\"Url de la Imagen\"\n          onChange={handleChange}\n          className=\"inputsPokemon\"\n          value={imgURI}\n          type=\"text\"\n        />\n        <input\n          name=\"nombre\"\n          placeholder=\"Nombre\"\n          onChange={handleChange}\n          className=\"inputsPokemon\"\n          value={nombre}\n          type=\"text\"\n        />\n        <input\n          name=\"level\"\n          placeholder=\"Nivel\"\n          onChange={handleChange}\n          className=\"inputsPokemon\"\n          value={level}\n          type=\"number\"\n        />\n        <input\n          name=\"tipo\"\n          placeholder=\"Tipo\"\n          onChange={handleChange}\n          className=\"inputsPokemon\"\n          value={tipo}\n          type=\"text\"\n        />\n      </div>\n      {allAttacks.length ? (\n        <div className=\"ataquesContainer\">\n          {allAttacks.map(attack => (\n            <div\n              className={`cardAttack ${isSelected(attack)}`}\n              key={attack._id}\n              onClick={() => handleSelect(attack)}\n            >\n              {attack.nombre}\n            </div>\n          ))}\n        </div>\n      ) : null}\n      <div className=\"buttonContainer\">\n        <button className=\"buttons\" onClick={handleSubmit}>\n          Crear\n        </button>\n      </div>\n      {error.response ? (\n        <ModalError\n          status={error.response.status}\n          message={error.response.data.message || error.response.data}\n          handleOpen={handleOpen}\n        />\n      ) : null}\n    </>\n  );\n};\n\nexport default CreatePokemon;\n","import React, { useState } from \"react\";\nimport Axios from \"axios\";\n\nimport { ModalError } from \"../modalError/ModalError\";\n\nimport \"./createAtaque.css\";\n\nconst CreateAtaque = ({ history }) => {\n  const [body, setBody] = useState({ nombre: \"\", daÃ±o: 0, tipo: \"\" });\n  const [error, setError] = useState({});\n\n  const handleChange = e => {\n    setBody({ ...body, [e.target.name]: e.target.value });\n  };\n\n  const handleOpen = () => {\n    setError({});\n  };\n\n  const handleSubmit = () => {\n    Axios.post(\"http://localhost:5000/api/ataques\", body)\n      .then(res => res.data)\n      .then(ataque => {\n        history.push(`/`);\n      })\n      .catch(setError);\n  };\n\n  const { nombre, daÃ±o, tipo } = body;\n  return (\n    <>\n      <h1 className=\"pokemonTitle\">Crear Ataque</h1>\n      <div className=\"inputsContainer\">\n        <input\n          name=\"nombre\"\n          className=\"inputsPokemon\"\n          placeholder=\"Nombre\"\n          onChange={handleChange}\n          value={nombre}\n          type=\"text\"\n        />\n        <input\n          name=\"daÃ±o\"\n          className=\"inputsPokemon\"\n          placeholder=\"DaÃ±o\"\n          onChange={handleChange}\n          value={daÃ±o}\n          type=\"number\"\n        />\n        <input\n          name=\"tipo\"\n          className=\"inputsPokemon\"\n          placeholder=\"Tipo\"\n          onChange={handleChange}\n          value={tipo}\n          type=\"text\"\n        />\n      </div>\n      <button onClick={handleSubmit} className=\"buttons\">\n        Crear\n      </button>\n      {error.response ? (\n        <ModalError\n          status={error.response.status}\n          message={error.response.data.message || error.response.data}\n          handleOpen={handleOpen}\n        />\n      ) : null}\n    </>\n  );\n};\n\nexport default CreateAtaque;\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport \"./App.css\";\n\nimport Pokemones from \"./components/pokemones/Pokemones\";\nimport Pokemon from \"./components/pokemon/Pokemon\";\nimport PokemonEdit from \"./components/pokemonEdit/PokemonEdit\";\nimport Navbar from \"./components/navbar/Navbar\";\nimport CreatePokemon from \"./components/createPokemon/CreatePokemon\";\nimport CreateAtaque from \"./components/createAtaque/CreateAtaque\";\n\nfunction App() {\n  return (\n    <div className=\"App App-header\">\n      <Navbar />\n      <Switch>\n        <Route\n          exact\n          path=\"/pokemon/:id/edit\"\n          render={({ match, history, location }) => (\n            <PokemonEdit\n              id={match.params.id}\n              history={history}\n              location={location}\n            />\n          )}\n        />\n        <Route\n          exact\n          path=\"/pokemon/create\"\n          render={({ history }) => <CreatePokemon history={history} />}\n        />\n        <Route\n          exact\n          path=\"/pokemon/:id\"\n          render={({ match, location }) => (\n            <Pokemon id={match.params.id} location={location} />\n          )}\n        />\n        <Route\n          path=\"/ataques/crear\"\n          render={({ history }) => <CreateAtaque history={history} />}\n        />\n        <Route\n          path=\"/pokemones\"\n          render={({ history }) => <Pokemones history={history} />}\n        />\n        <Route\n          path=\"/\"\n          render={({ history }) => <Pokemones history={history} />}\n        />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}